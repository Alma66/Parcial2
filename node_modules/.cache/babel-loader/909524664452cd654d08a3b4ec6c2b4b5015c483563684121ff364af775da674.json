{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alma\\\\Desktop\\\\ebano_bronce2\\\\src\\\\components\\\\sesion\\\\Login.js\",\n  _s = $RefreshSig$();\n// components/sesion/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../../context/AuthContext';\n\n// Simulamos una base de datos de usuarios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeUsersDB = [{\n  username: 'admin',\n  password: 'admin123',\n  role: 'Administrador'\n}, {\n  username: 'user1',\n  password: 'user123',\n  role: 'Usuario'\n}, {\n  username: 'user2',\n  password: 'user123',\n  role: 'Usuario'\n}];\nconst Login = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validación manual: verificar que los campos no estén vacíos\n    if (!username || !password) {\n      setError('Por favor, ingresa un usuario y una contraseña.');\n      return;\n    }\n\n    // Buscar el usuario en la \"base de datos\"\n    const user = fakeUsersDB.find(user => user.username === username && user.password === password);\n    if (user) {\n      login(user); // Llamamos al login con la información del usuario encontrado\n      setError(''); // Limpiamos el error si el login fue exitoso\n    } else {\n      setError('Usuario o contraseña incorrectos'); // Si no se encuentra el usuario\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Iniciar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Usuario\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Iniciar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"f1EypTHea0r7Z40vcnObIFEVp80=\", false, function () {\n  return [useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","fakeUsersDB","username","password","role","Login","_s","login","setUsername","setPassword","error","setError","handleSubmit","e","preventDefault","user","find","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Alma/Desktop/ebano_bronce2/src/components/sesion/Login.js"],"sourcesContent":["// components/sesion/Login.js\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\n// Simulamos una base de datos de usuarios\r\nconst fakeUsersDB = [\r\n  { username: 'admin', password: 'admin123', role: 'Administrador' },\r\n  { username: 'user1', password: 'user123', role: 'Usuario' },\r\n  { username: 'user2', password: 'user123', role: 'Usuario' }\r\n];\r\n\r\nconst Login = () => {\r\n  const { login } = useAuth();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validación manual: verificar que los campos no estén vacíos\r\n    if (!username || !password) {\r\n      setError('Por favor, ingresa un usuario y una contraseña.');\r\n      return;\r\n    }\r\n\r\n    // Buscar el usuario en la \"base de datos\"\r\n    const user = fakeUsersDB.find(\r\n      (user) => user.username === username && user.password === password\r\n    );\r\n\r\n    if (user) {\r\n      login(user); // Llamamos al login con la información del usuario encontrado\r\n      setError(''); // Limpiamos el error si el login fue exitoso\r\n    } else {\r\n      setError('Usuario o contraseña incorrectos'); // Si no se encuentra el usuario\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Iniciar sesión</h3>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Usuario\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Contraseña\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Iniciar sesión</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}