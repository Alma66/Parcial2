{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alma\\\\Desktop\\\\ebano_bronce2\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAuth } from '../context/AuthContext'; // Accedemos al contexto de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const {\n    user\n  } = useAuth(); // Obtenemos el usuario desde el contexto\n\n  // Verificamos si el usuario tiene el rol \"Administrador\"\n  if ((user === null || user === void 0 ? void 0 : user.role) !== \"Administrador\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tienes acceso a esta secci\\xF3n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // Si no es administrador, mostramos un mensaje\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Panel de Administrador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aqu\\xED puedes gestionar los usuarios, roles, etc.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useAuth","jsxDEV","_jsxDEV","AdminPanel","_s","user","role","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Alma/Desktop/ebano_bronce2/src/components/AdminPanel.js"],"sourcesContent":["import React from 'react';\r\nimport { useAuth } from '../context/AuthContext'; // Accedemos al contexto de autenticación\r\n\r\nconst AdminPanel = () => {\r\n  const { user } = useAuth(); // Obtenemos el usuario desde el contexto\r\n\r\n  // Verificamos si el usuario tiene el rol \"Administrador\"\r\n  if (user?.role !== \"Administrador\") {\r\n    return <p>No tienes acceso a esta sección.</p>; // Si no es administrador, mostramos un mensaje\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Panel de Administrador</h2>\r\n      <p>Aquí puedes gestionar los usuarios, roles, etc.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE5B;EACA,IAAI,CAAAK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,IAAI,MAAK,eAAe,EAAE;IAClC,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAClD;EAEA,oBACET,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BT,OAAA;MAAAK,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACP,EAAA,CAdID,UAAU;EAAA,QACGH,OAAO;AAAA;AAAAY,EAAA,GADpBT,UAAU;AAgBhB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}