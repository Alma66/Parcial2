{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alma\\\\Desktop\\\\ebano_bronce2\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/AuthContext.js\nimport React, { createContext, useContext, useState } from 'react';\n\n// Simulamos una \"base de datos\" de usuarios con roles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeUsersDB = [{\n  username: 'admin',\n  password: 'admin123',\n  role: 'Administrador'\n}, {\n  username: 'user1',\n  password: 'user123',\n  role: 'Usuario'\n}, {\n  username: 'user2',\n  password: 'user123',\n  role: 'Usuario'\n}];\n\n// Creamos el contexto de autenticación\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Componente proveedor de autenticación\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para almacenar la información del usuario autenticado\n  const [user, setUser] = useState(null);\n\n  // Función para simular inicio de sesión\n  const login = (username, password) => {\n    // Buscar al usuario en nuestra \"base de datos\"\n    const foundUser = fakeUsersDB.find(user => user.username === username && user.password === password);\n    if (foundUser) {\n      setUser(foundUser); // Si encontramos al usuario, lo autenticamos\n    } else {\n      console.error('Usuario o contraseña incorrectos');\n      setUser(null); // Si no, mostramos un error\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => setUser(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook para acceder al contexto de autenticación\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","fakeUsersDB","username","password","role","AuthContext","AuthProvider","children","_s","user","setUser","login","foundUser","find","console","error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Alma/Desktop/ebano_bronce2/src/context/AuthContext.js"],"sourcesContent":["// context/AuthContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\n// Simulamos una \"base de datos\" de usuarios con roles\r\nconst fakeUsersDB = [\r\n  { username: 'admin', password: 'admin123', role: 'Administrador' },\r\n  { username: 'user1', password: 'user123', role: 'Usuario' },\r\n  { username: 'user2', password: 'user123', role: 'Usuario' }\r\n];\r\n\r\n// Creamos el contexto de autenticación\r\nconst AuthContext = createContext();\r\n\r\n// Componente proveedor de autenticación\r\nexport const AuthProvider = ({ children }) => {\r\n  // Estado para almacenar la información del usuario autenticado\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Función para simular inicio de sesión\r\n  const login = (username, password) => {\r\n    // Buscar al usuario en nuestra \"base de datos\"\r\n    const foundUser = fakeUsersDB.find(\r\n      (user) => user.username === username && user.password === password\r\n    );\r\n\r\n    if (foundUser) {\r\n      setUser(foundUser); // Si encontramos al usuario, lo autenticamos\r\n    } else {\r\n      console.error('Usuario o contraseña incorrectos');\r\n      setUser(null); // Si no, mostramos un error\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => setUser(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para acceder al contexto de autenticación\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAgB,CAAC,EAClE;EAAEF,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC3D;EAAEF,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAU,CAAC,CAC5D;;AAED;AACA,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMa,KAAK,GAAGA,CAACT,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA,MAAMS,SAAS,GAAGX,WAAW,CAACY,IAAI,CAC/BJ,IAAI,IAAKA,IAAI,CAACP,QAAQ,KAAKA,QAAQ,IAAIO,IAAI,CAACN,QAAQ,KAAKA,QAC5D,CAAC;IAED,IAAIS,SAAS,EAAE;MACbF,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACjDL,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAMM,MAAM,GAAGA,CAAA,KAAMN,OAAO,CAAC,IAAI,CAAC;EAElC,oBACEV,OAAA,CAACK,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,IAAI;MAAEE,KAAK;MAAEK;IAAO,CAAE;IAAAT,QAAA,EAClDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAd,EAAA,CA7BaF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA8BzB,OAAO,MAAMkB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5B,UAAU,CAACQ,WAAW,CAAC;AAAA;AAACoB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}